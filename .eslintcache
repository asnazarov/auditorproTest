[{"C:\\Users\\stran\\WebstormProjects\\untitled\\auditorproTest\\src\\index.js":"1","C:\\Users\\stran\\WebstormProjects\\untitled\\auditorproTest\\src\\App.jsx":"2","C:\\Users\\stran\\WebstormProjects\\untitled\\auditorproTest\\src\\components\\CopyPasteText\\CopyPasteText.jsx":"3","C:\\Users\\stran\\WebstormProjects\\untitled\\auditorproTest\\src\\components\\Diagrams\\Main.jsx":"4","C:\\Users\\stran\\WebstormProjects\\untitled\\auditorproTest\\src\\components\\Diagrams\\control-panel\\control-panel.jsx":"5","C:\\Users\\stran\\WebstormProjects\\untitled\\auditorproTest\\src\\components\\Diagrams\\control-panel\\images\\index.js":"6","C:\\Users\\stran\\WebstormProjects\\untitled\\auditorproTest\\src\\components\\Diagrams\\images\\index.js":"7","C:\\Users\\stran\\WebstormProjects\\untitled\\auditorproTest\\src\\components\\Diagrams\\modals\\data-card\\data-card.jsx":"8","C:\\Users\\stran\\WebstormProjects\\untitled\\auditorproTest\\src\\components\\Diagrams\\modals\\save\\save.jsx":"9","C:\\Users\\stran\\WebstormProjects\\untitled\\auditorproTest\\src\\components\\Diagrams\\ui\\tooltip\\material-ui-styles.js":"10","C:\\Users\\stran\\WebstormProjects\\untitled\\auditorproTest\\src\\components\\Diagrams\\modals\\choice-ordinagram\\choice-ordinagram.jsx":"11","C:\\Users\\stran\\WebstormProjects\\untitled\\auditorproTest\\src\\components\\Diagrams\\control-panel\\images\\arrow-down.jsx":"12","C:\\Users\\stran\\WebstormProjects\\untitled\\auditorproTest\\src\\components\\Diagrams\\modals\\create-orginagram\\create-orginagram.jsx":"13","C:\\Users\\stran\\WebstormProjects\\untitled\\auditorproTest\\src\\components\\Diagrams\\modals\\create-orginagram\\images\\index.js":"14"},{"size":232,"mtime":1618082501521,"results":"15","hashOfConfig":"16"},{"size":1619,"mtime":1618082508473,"results":"17","hashOfConfig":"16"},{"size":859,"mtime":1617179337684,"results":"18","hashOfConfig":"19"},{"size":22881,"mtime":1618430731559,"results":"20","hashOfConfig":"16"},{"size":2727,"mtime":1618435998852,"results":"21","hashOfConfig":"16"},{"size":566,"mtime":1618427944201,"results":"22","hashOfConfig":"16"},{"size":478,"mtime":1618269018000,"results":"23","hashOfConfig":"16"},{"size":4582,"mtime":1618332235130,"results":"24","hashOfConfig":"16"},{"size":1181,"mtime":1618436701159,"results":"25","hashOfConfig":"16"},{"size":563,"mtime":1618328790881,"results":"26","hashOfConfig":"16"},{"size":633,"mtime":1618434330916,"results":"27","hashOfConfig":"16"},{"size":617,"mtime":1618434213153,"results":"28","hashOfConfig":"16"},{"size":2314,"mtime":1618439991504,"results":"29","hashOfConfig":"16"},{"size":422,"mtime":1618438986273,"results":"30","hashOfConfig":"16"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"mszg4f",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"8bne42",{"filePath":"38","messages":"39","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"33"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"33"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"33"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"33"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"C:\\Users\\stran\\WebstormProjects\\untitled\\auditorproTest\\src\\index.js",[],["64","65"],"C:\\Users\\stran\\WebstormProjects\\untitled\\auditorproTest\\src\\App.jsx",[],"C:\\Users\\stran\\WebstormProjects\\untitled\\auditorproTest\\src\\components\\CopyPasteText\\CopyPasteText.jsx",["66"],"C:\\Users\\stran\\WebstormProjects\\untitled\\auditorproTest\\src\\components\\Diagrams\\Main.jsx",["67","68","69","70","71","72","73"],"// import React, {useEffect, useState} from 'react';\r\n// import ReactFlow, {removeElements, addEdge, Handle} from 'react-flow-renderer';\r\n// import commentSvg from './images/comment.svg';\r\n// import './main.css';\r\n// import {ControlPanel} from \"./control-panel/control-panel\";\r\n// import {DataCard} from \"./modals/data-card/data-card\";\r\n//\r\n//\r\n// let data = [\r\n//   {\r\n//     id: 12321231213,\r\n//     photo: '',\r\n//     full_name: 'Вася',\r\n//     status_color: '#E1E5EB',\r\n//     // working_position: 'Второй помощник капитана',\r\n//     working_position: '',\r\n//     characteristic: '',\r\n//     documents: [],\r\n//     position: {x: 350, y: 50},\r\n//     user_data: [\r\n//       {\r\n//         id: 1,\r\n//         icon: '',\r\n//         title: 'Департамент',\r\n//         description: '',\r\n//       },\r\n//       {\r\n//         id: 2,\r\n//         icon: '',\r\n//         title: 'Дата рождения',\r\n//         description: '',\r\n//       },\r\n//       {\r\n//         id: 3,\r\n//         icon: '',\r\n//         title: 'Телефон',\r\n//         description: '',\r\n//       },\r\n//       {\r\n//         id: 4,\r\n//         icon: '',\r\n//         title: 'Почта',\r\n//         description: '',\r\n//       },\r\n//     ],\r\n//   },\r\n//   {\r\n//     id: 1,\r\n//     photo: '',\r\n//     full_name: 'Петя',\r\n//     status_color: '#E1E5EB',\r\n//     // working_position: 'Второй помощник капитана',\r\n//     working_position: '',\r\n//     characteristic: '',\r\n//     documents: [],\r\n//     position: {x: 128, y: 272},\r\n//     user_data: [\r\n//       {\r\n//         id: 1,\r\n//         icon: '',\r\n//         title: 'Департамент',\r\n//         description: '',\r\n//       },\r\n//       {\r\n//         id: 2,\r\n//         icon: '',\r\n//         title: 'Дата рождения',\r\n//         description: '',\r\n//       },\r\n//       {\r\n//         id: 3,\r\n//         icon: '',\r\n//         title: 'Телефон',\r\n//         description: '',\r\n//       },\r\n//       {\r\n//         id: 4,\r\n//         icon: '',\r\n//         title: 'Почта',\r\n//         description: '',\r\n//       },\r\n//     ],\r\n//   },\r\n//   {\r\n//     id: 2,\r\n//     photo: '',\r\n//     full_name: 'Петя',\r\n//     status_color: '#E1E5EB',\r\n//     // working_position: 'Второй помощник капитана',\r\n//     working_position: '',\r\n//     characteristic: '',\r\n//     documents: [],\r\n//     position: {x: 637, y: 278},\r\n//     user_data: [\r\n//       {\r\n//         id: 1,\r\n//         icon: '',\r\n//         title: 'Департамент',\r\n//         description: '',\r\n//       },\r\n//       {\r\n//         id: 2,\r\n//         icon: '',\r\n//         title: 'Дата рождения',\r\n//         description: '',\r\n//       },\r\n//       {\r\n//         id: 3,\r\n//         icon: '',\r\n//         title: 'Телефон',\r\n//         description: '',\r\n//       },\r\n//       {\r\n//         id: 4,\r\n//         icon: '',\r\n//         title: 'Почта',\r\n//         description: '',\r\n//       },\r\n//     ],\r\n//   },\r\n//\r\n// ]\r\n//\r\n// // const initialElements = [\r\n// //   // {\r\n// //   //   id: '1',\r\n// //   //   type: 'default',\r\n// //   //   data: {label: \"Main card\"},\r\n// //   //   targetPosition: 'left',\r\n// //   //   position: {x: 250, y: 25},\r\n// //   //   // draggable: false,\r\n// //   //   // connectable: false,\r\n// //   //   className: 'rrrrrr',\r\n// //   //   // selectable: false,\r\n// //   // },\r\n// //   {\r\n// //     id: '2',\r\n// //     data: {\r\n// //       label:\r\n// //         <>\r\n// //           <div className=\"status\"/>\r\n// //           <div className=\"card__item\">\r\n// //             <img src={avatarJobSvg} alt=\"avatar\"/>\r\n// //             <div>\r\n// //               <p>Владислав</p>\r\n// //               <p>Константинов</p>\r\n// //               <p>Второй помощник капитана</p>\r\n// //             </div>\r\n// //           </div>\r\n// //           <div style={{display: 'flex'}}>\r\n// //             <img src={commentSvg} alt=\"comment\"/>\r\n// //             <img src={fileSvg} alt=\"file\"/>\r\n// //             <p style={{margin: 0}}>А56</p>\r\n// //           </div>\r\n// //         </>\r\n// //     },\r\n// //     className: \"card\",\r\n// //     position: {x: 550, y: 250},\r\n// //   },\r\n// // ];\r\n//\r\n// export default () => {\r\n//   let connectLine = [\r\n//     // {\r\n//     //   id: \"reactflow__edge-12321231213c-2a\",\r\n//     //   source: \"12321231213\",\r\n//     //   sourceHandle: \"c\",\r\n//     //   target: \"2\",\r\n//     //   targetHandle: \"a\",\r\n//     // },\r\n//     {\r\n//       id: 'e1-1',\r\n//       source: '12321231213',\r\n//       target: '2',\r\n//       type: 'smoothstep',\r\n//     },\r\n//     // {\r\n//     //   id: 'e1-2',\r\n//     //   source: '12321231213',\r\n//     //   target: '1',\r\n//     //   type: 'smoothstep',\r\n//     // },\r\n//   ]\r\n//   const [elements, setElements] = useState([]);\r\n//   const [dataActiveCard, setDataActiveCard] = useState({})\r\n//   const [openModal, setOpenModal] = React.useState(false);\r\n//   const [mouseEnterLeave, setMouseEnterLeave] = useState(false)\r\n//   const [a, setA] = useState(false)\r\n//\r\n//   const handleDoubleClickCard = (card) => {\r\n//     setOpenModal(true);\r\n//     setDataActiveCard(card)\r\n//   };\r\n//\r\n//   const onElementsRemove = (elementsToRemove) =>\r\n//     setElements((els) => removeElements(elementsToRemove, els));\r\n//\r\n//   const onConnect = (params) => {\r\n//     console.log(params)\r\n//     // let newData = [...connectLine, params]\r\n//     // connectLine = newData\r\n//    return setElements((els) => addEdge(params, els));\r\n//   }\r\n//\r\n//   const onNodeDragStop = (event, node) => {\r\n//     console.log(node)\r\n//     // const newData = data?.map((x, index) => {\r\n//     //   if (x.id === Number(node.id)) {\r\n//     //     return {\r\n//     //       ...x,\r\n//     //       position: node?.position\r\n//     //     }\r\n//     //   }\r\n//     //   return {...x}\r\n//     // })\r\n//     // data = newData\r\n//   }\r\n//\r\n//\r\n//   const onNodeMouseEnter = (event, node) => {\r\n//     setMouseEnterLeave(true)\r\n//   }\r\n//\r\n//   const onNodeMouseLeave = (event, node) => {\r\n//     setMouseEnterLeave(false)\r\n//   }\r\n//\r\n//   const onSubmitName = (e) => {\r\n//     e.preventDefault()\r\n//     e.target[0].blur()\r\n//   }\r\n//   const returnLabel = (card, indexCard) => {\r\n//\r\n//     return (\r\n//       <div>\r\n//         <div\r\n//           onDoubleClick={() => handleDoubleClickCard(card)}\r\n//           // onMouseEnter={(e) => setMouseEnterLeave(true)}\r\n//           // onMouseLeave={(e) => setMouseEnterLeave(false)}\r\n//         >\r\n//           <div className=\"status\" style={{background: card.status_color}}/>\r\n//           <div className=\"card__item\">\r\n//             <img src={avatarJob} alt=\"avatar\"/>\r\n//             {(data.length === 1 && card.full_name === '') ?\r\n//               <div>\r\n//                 <form onSubmit={onSubmitName}>\r\n//                   <input placeholder=\"Имя и фамилия\"/>\r\n//                 </form>\r\n//               </div> : <div>\r\n//                 <p>{card.full_name}</p>\r\n//                 <p>{card.working_position}</p>\r\n//               </div>\r\n//             }\r\n//           </div>\r\n//           <div style={{display: 'flex'}}>\r\n//             <img src={commentSvg} alt=\"comment\"/>\r\n//             <img src={fileSvg} alt=\"file\"/>\r\n//             <p style={{margin: 0}}>А56</p>\r\n//           </div>\r\n//         </div>\r\n//         <button className=\"card__add card__add_left\">+</button>\r\n//         <button className=\"card__add card__add_bottom\">+</button>\r\n//         <button className=\"card__add card__add_right\">+</button>\r\n//         <Handle\r\n//           type=\"target\"\r\n//           position=\"top\"\r\n//           id=\"a\"\r\n//           style={{borderRadius: 0, bottom: 0, width: 22, height: 10}}\r\n//           // isValidConnection={(connection) => console.log(connection)}\r\n//           // isValidConnection={(connection) => connection.source === 'some-id'}\r\n//           // onConnect={(params) => console.log('handle onConnect', params)}\r\n//           // onConnect={(params) => onConnect(params)}\r\n//         />\r\n//         {/*<Handle*/}\r\n//         {/*  // type=\"target\"*/}\r\n//         {/*  position=\"right\"*/}\r\n//         {/*  id=\"b\"*/}\r\n//         {/*  style={{top: '50%', borderRadius: 0, right: 0, width: 10, height: 22}}*/}\r\n//         {/*  isValidConnection={(connection) => console.log(connection)}*/}\r\n//         {/*  // isValidConnection={(connection) => connection.source === 'some-id'}*/}\r\n//         {/*  onConnect={(params) => console.log('handle onConnect', params)}*/}\r\n//         {/*/>*/}\r\n//         <Handle\r\n//           type=\"source\"\r\n//           position=\"bottom\"\r\n//           id=\"c\"\r\n//           style={{borderRadius: 0, bottom: 0, width: 22, left: '50%', height: 10}}\r\n//           // isValidConnection={(connection) => console.log(connection)}\r\n//           // isValidConnection={(connection) => connection.source === 'some-id'}\r\n//           // onConnect={(params) => console.log('handle onConnect', params)}\r\n//           // onConnect={(params) => onConnect(params)}\r\n//         />\r\n//         {/*<Handle*/}\r\n//         {/*  // type=\"source\"*/}\r\n//         {/*  position=\"left\"*/}\r\n//         {/*  id=\"d\"*/}\r\n//         {/*  style={{borderRadius: 0, left: 0, width: 10, height: 22}}*/}\r\n//         {/*  isValidConnection={(connection) => console.log(connection)}*/}\r\n//         {/*  // isValidConnection={(connection) => connection.source === 'some-id'}*/}\r\n//         {/*  onConnect={(params) => console.log('handle onConnect', params)}*/}\r\n//         {/*/>*/}\r\n//       </div>\r\n//     )\r\n//   }\r\n//\r\n//   useEffect(() => {\r\n//     let items = data.map((card, index) => {\r\n//       return (\r\n//         {\r\n//           id: card.id,\r\n//           position: card.position,\r\n//           data: {label: returnLabel(card, index)},\r\n//           className: \"card\",\r\n//           type: 'input',\r\n//         }\r\n//       )\r\n//     })\r\n//     items = items.concat(connectLine)\r\n//     console.log('items', items)\r\n//     setElements(items)\r\n//   }, [])\r\n//\r\n// console.log(elements)\r\n//   return (\r\n//     <>\r\n//       {openModal && <DataCard setOpen={setOpenModal} open={openModal} card={dataActiveCard}/>}\r\n//       <ControlPanel/>\r\n//       <ReactFlow\r\n//         elements={elements}\r\n//         onElementsRemove={onElementsRemove}\r\n//         onNodeDragStop={onNodeDragStop}\r\n//         connectionLineType=\"smoothstep\"\r\n//         // onNodeMouseEnter={onNodeMouseEnter}\r\n//         // onNodeMouseLeave={onNodeMouseLeave}\r\n//         onConnect={onConnect}\r\n//         className=\"cardssss\"\r\n//         style={{\r\n//           height: \"80vh\",\r\n//           // border: \"1px solid red\"\r\n//         }}\r\n//         deleteKeyCode={46} /* 'delete'-key */\r\n//       >\r\n//         <div>123</div>\r\n//       </ReactFlow>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n\r\nimport React, {useCallback, useEffect, useState} from 'react';\r\nimport ReactFlow, {Controls, updateEdge, addEdge, Handle} from 'react-flow-renderer';\r\nimport {TooltipBtn, useStyles} from './ui/tooltip/material-ui-styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport './main.css';\r\nimport {ControlPanel} from \"./control-panel/control-panel\";\r\nimport {DataCard} from \"./modals/data-card/data-card\";\r\nimport {avatarJobJpg, commentSvg, fileSvg} from \"./images\";\r\nimport {Save, saveType} from \"./modals/save/save\";\r\n\r\nlet connectLine = [\r\n  {id: 'e1-2', source: '1', target: '2', type: 'smoothstep',},\r\n]\r\nconst getNodeId = () => `randomnode_${+new Date()}`;\r\n\r\nlet user = {\r\n  mail: 'affa@adas.ru',\r\n\r\n  organigramms: [\r\n    {\r\n      id: 0,\r\n      order_id: 1,\r\n      name: '',\r\n      type: '',  // top-bottom, bottom-top, left-right, right-left\r\n      connect_line: 'smoothstep',  //  'default', 'straight', 'step','smoothstep'\r\n      base_color: '',\r\n    }\r\n  ],\r\n  items: [\r\n    {\r\n      id: 0,\r\n      full_name: '',\r\n      data: {label: 'Node A'},\r\n      color_card: '',  // получить с бека organigramms.base_color\r\n      status: {\r\n        status_name: '',\r\n        closing_date: '',\r\n      },\r\n      position: {x: 350, y: 50},\r\n      photo: '',\r\n      call_sign: '',\r\n      working_position: '',\r\n      comments: '',\r\n      documents: [],\r\n    }\r\n  ],\r\n  items_detail: [\r\n    {\r\n      item_id: 0,\r\n      full_name: '',\r\n      working_position: '',\r\n      comments: '',\r\n      documents: [],\r\n      color_card: '',\r\n      status: {\r\n        status_name: '',\r\n        closing_date: '',\r\n      },\r\n      call_sign: '',\r\n      photo: '',\r\n      user_data: [\r\n        {\r\n          id: 1,\r\n          icon: '',\r\n          order_id: 1,\r\n          title: 'Департамент',\r\n          description: '',\r\n        },\r\n        {\r\n          id: 2,\r\n          icon: '',\r\n          order_id: 2,\r\n          title: 'Дата рождения',\r\n          description: '',\r\n        },\r\n        {\r\n          id: 3,\r\n          icon: '',\r\n          order_id: 3,\r\n          title: 'Телефон',\r\n          description: '',\r\n        },\r\n        {\r\n          id: 4,\r\n          icon: '',\r\n          order_id: 4,\r\n          title: 'Почта',\r\n          description: '',\r\n        },\r\n      ]\r\n    },\r\n  ],\r\n  connectLine: [\r\n    {\r\n      id: '',\r\n      source: '1',\r\n      target: '2',\r\n      type: 'smoothstep',\r\n    }\r\n  ]\r\n}\r\n\r\n\r\nlet initialElements = [\r\n  {\r\n    id: '1',\r\n    full_name: '',\r\n    data: {label: 'Node A'},\r\n    status_color: '#E1E5EB',\r\n    position: {x: 750, y: 50},\r\n    user_data: [\r\n      {\r\n        id: 1,\r\n        icon: '',\r\n        title: 'Департамент',\r\n        description: '',\r\n      },\r\n      {\r\n        id: 2,\r\n        icon: '',\r\n        title: 'Дата рождения',\r\n        description: '',\r\n      },\r\n      {\r\n        id: 3,\r\n        icon: '',\r\n        title: 'Телефон',\r\n        description: '',\r\n      },\r\n      {\r\n        id: 4,\r\n        icon: '',\r\n        title: 'Почта',\r\n        description: '',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: '2',\r\n    full_name: 'Миша',\r\n    data: {label: 'Node A'},\r\n    status_color: '#29c31a',\r\n    position: {x: 128, y: 278},\r\n    user_data: [\r\n      {\r\n        id: 1,\r\n        icon: '',\r\n        title: 'Департамент',\r\n        description: '',\r\n      },\r\n      {\r\n        id: 2,\r\n        icon: '',\r\n        title: 'Дата рождения',\r\n        description: '',\r\n      },\r\n      {\r\n        id: 3,\r\n        icon: '',\r\n        title: 'Телефон',\r\n        description: '',\r\n      },\r\n      {\r\n        id: 4,\r\n        icon: '',\r\n        title: 'Почта',\r\n        description: '',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: '3',\r\n    full_name: 'Вася Петров',\r\n    data: {label: 'Node A'},\r\n    status_color: '#07b89d',\r\n    position: {x: 637, y: 278},\r\n    user_data: [\r\n      {\r\n        id: 1,\r\n        icon: '',\r\n        title: 'Департамент',\r\n        description: '',\r\n      },\r\n      {\r\n        id: 2,\r\n        icon: '',\r\n        title: 'Дата рождения',\r\n        description: '',\r\n      },\r\n      {\r\n        id: 3,\r\n        icon: '',\r\n        title: 'Телефон',\r\n        description: '',\r\n      },\r\n      {\r\n        id: 4,\r\n        icon: '',\r\n        title: 'Почта',\r\n        description: '',\r\n      },\r\n    ],\r\n  },\r\n  // {\r\n  //   id: '4',\r\n  //   full_name: 'Жора',\r\n  //   data: { label: 'Node A' },\r\n  //   status_color: '#07b89d',\r\n  //   position: {x: 637, y: 578},\r\n  //   user_data: [\r\n  //     {\r\n  //       id: 1,\r\n  //       icon: '',\r\n  //       title: 'Департамент',\r\n  //       description: '',\r\n  //     },\r\n  //     {\r\n  //       id: 2,\r\n  //       icon: '',\r\n  //       title: 'Дата рождения',\r\n  //       description: '',\r\n  //     },\r\n  //     {\r\n  //       id: 3,\r\n  //       icon: '',\r\n  //       title: 'Телефон',\r\n  //       description: '',\r\n  //     },\r\n  //     {\r\n  //       id: 4,\r\n  //       icon: '',\r\n  //       title: 'Почта',\r\n  //       description: '',\r\n  //     },\r\n  //   ],\r\n  // },\r\n];\r\nconst onLoad = (reactFlowInstance) => reactFlowInstance.fitView();\r\n\r\nexport default () => {\r\n  const classes = useStyles()\r\n  // const [elements, setElements] = useState(initialElements.concat(connectLine));\r\n  const [elements, setElements] = useState([]);\r\n  const [isDraggable, setIsDraggable] = useState(true);\r\n  const [dataActiveCard, setDataActiveCard] = useState({})\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [inputFocus, setInputFocus] = useState(false)\r\n  // const onEdgeUpdate = (oldEdge, newConnection) =>\r\n  //   setElements((els) => updateEdge(oldEdge, newConnection, els));\r\n\r\n  const onAddBottom = (event, card) => {\r\n    const heightElem = event.nativeEvent.path[1].clientHeight\r\n    // console.log(event)\r\n    console.log(card)\r\n    const newNode = {\r\n      id: getNodeId(),\r\n      data: {label: returnLabel()},\r\n      position: {\r\n        x: card.position.x,\r\n        y: card.position.y + 250,\r\n      },\r\n      type: 'input',\r\n      className: \"card\",\r\n    };\r\n    const newInitialElement = {\r\n      ...newNode,\r\n      user_data: [\r\n        {\r\n          id: 1,\r\n          icon: '',\r\n          title: 'Департамент',\r\n          description: '',\r\n        },\r\n        {\r\n          id: 2,\r\n          icon: '',\r\n          title: 'Дата рождения',\r\n          description: '',\r\n        },\r\n        {\r\n          id: 3,\r\n          icon: '',\r\n          title: 'Телефон',\r\n          description: '',\r\n        },\r\n        {\r\n          id: 4,\r\n          icon: '',\r\n          title: 'Почта',\r\n          description: '',\r\n        },\r\n      ],\r\n      status_color: \"#07b89d\",\r\n      full_name: 'Без имени',\r\n    }\r\n    initialElements = [...initialElements, newInitialElement]\r\n\r\n    setElements((els) => els.concat(newNode));\r\n  };\r\n\r\n  const handleDoubleClickCard = (card) => {\r\n    setOpenModal(true);\r\n    setDataActiveCard(card)\r\n  };\r\n\r\n  const onConnect = (params) => {\r\n    params = {...params, type: 'smoothstep',}\r\n    setElements((els) => addEdge(params, els))\r\n  };\r\n\r\n  const onSubmitName = (e) => {\r\n    e.preventDefault()\r\n    e.target[0].blur()\r\n    setIsDraggable(true)\r\n    setInputFocus(false)\r\n  }\r\n\r\n  const onHandleInput = (card) => {\r\n    setIsDraggable(false)\r\n    // const currentCardIndex = elements.findIndex(item => console.log(item))\r\n    // const inputCard = elements[currentCardIndex]\r\n    setInputFocus(true)\r\n  }\r\n\r\n  console.log(elements)\r\n  const returnLabel = (card, indexCard) => {\r\n\r\n    return (\r\n      <>\r\n        <div\r\n          onDoubleClick={() => handleDoubleClickCard(card, indexCard)}\r\n          // onMouseEnter={(e) => setMouseEnterLeave(true)}\r\n          // onMouseLeave={(e) => setMouseEnterLeave(false)}\r\n          key={indexCard}\r\n        >\r\n          <div className=\"status\" style={{background: card?.status_color}}/>\r\n          <div className=\"card__item\">\r\n            <img src={avatarJobJpg} alt=\"avatar\"/>\r\n            {(initialElements.length === 1 || card?.full_name === '') ?\r\n              <div>\r\n                <form onSubmit={onSubmitName}>\r\n                  {/*<form>*/}\r\n                  <input\r\n                    className=\"card__input\"\r\n                    onFocus={() => onHandleInput(card)}\r\n                    placeholder=\"Имя и фамилия\"/>\r\n                </form>\r\n              </div>\r\n              : <div>\r\n                <p>{card?.full_name}</p>\r\n                {/*<p>{card.working_position}</p>*/}\r\n              </div>\r\n            }\r\n          </div>\r\n          <div className=\"card__item\" style={{display: 'flex'}}>\r\n            <TooltipBtn title='Комментарий' enterDelay={400}>\r\n              <Button style={{minWidth: 20, background: 'transparent', padding: 0}}>\r\n                <img className=\"card__svg\" src={commentSvg} alt=\"comment\"/>\r\n              </Button>\r\n            </TooltipBtn>\r\n            <TooltipBtn title='Документы' enterDelay={400}>\r\n              <Button style={{minWidth: 20, background: 'transparent', padding: 0, marginLeft: 4}}>\r\n                <img className=\"card__svg\" src={fileSvg} alt=\"file\"/>\r\n              </Button>\r\n            </TooltipBtn>\r\n            <p style={{margin: '0px 0px 0px auto'}}>А56</p>\r\n          </div>\r\n          {inputFocus && <Save type={saveType.card} setInputFocus={setInputFocus} text=\"Готово\"/>}\r\n        </div>\r\n        <button className=\"card__add card__add_left\">+</button>\r\n        <button className=\"card__add card__add_bottom\" onClick={(event) => onAddBottom(event, card)}>+</button>\r\n        <button className=\"card__add card__add_right\">+</button>\r\n        <Handle\r\n          type=\"target\"\r\n          position=\"top\"\r\n          id=\"a\"\r\n          style={{borderRadius: 0, bottom: 0, width: 22, height: 10}}\r\n          // isValidConnection={(connection) => console.log(connection)}\r\n          // isValidConnection={(connection) => connection.source === 'some-id'}\r\n          // onConnect={(params) => console.log('handle onConnect', params)}\r\n          // onConnect={(params) => onConnect(params)}\r\n        />\r\n        <Handle\r\n          type=\"source\"\r\n          position=\"bottom\"\r\n          id=\"c\"\r\n          style={{borderRadius: 0, bottom: 0, width: 22, left: '50%', height: 10}}\r\n          // isValidConnection={(connection) => console.log(connection)}\r\n          // isValidConnection={(connection) => connection.source === 'some-id'}\r\n          // onConnect={(params) => console.log('handle onConnect', params)}\r\n          // onConnect={(params) => onConnect(params)}\r\n        />\r\n      </>\r\n    )\r\n  }\r\n\r\n  // const [elements, setElements] = useState([]);\r\n  useEffect(() => {\r\n    let items = initialElements.map((card, index) => {\r\n      return ({\r\n        id: card.id,\r\n        position: card.position,\r\n        data: {label: returnLabel(card, index)},\r\n        inputFocus: false,\r\n        type: 'input',\r\n        className: \"card\",\r\n      })\r\n    })\r\n\r\n    items = items.concat(connectLine)\r\n//     console.log('items', items)\r\n    setElements(items)\r\n  }, [initialElements, inputFocus])\r\n\r\n  return (\r\n    <>\r\n      {/*{openModal && <DataCard setOpen={setOpenModal} open={openModal} card={dataActiveCard}/>}*/}\r\n      {openModal && <DataCard setOpen={setOpenModal} open={openModal} card={dataActiveCard}/>}\r\n      <ControlPanel/>\r\n      <ReactFlow\r\n        id=\"flow\"\r\n        elements={elements}\r\n        onLoad={onLoad}\r\n        snapToGrid\r\n        snapGrid={[10, 10]}\r\n        defaultZoom={0.8}\r\n        nodesDraggable={isDraggable}\r\n        minZoom={0.3}\r\n        maxZoom={2}\r\n        // onEdgeUpdate={onEdgeUpdate}\r\n        onConnect={onConnect}\r\n        connectionLineType=\"smoothstep\"\r\n        style={{\r\n          height: \"80vh\",\r\n          // border: \"1px solid red\"\r\n        }}\r\n        // deleteKeyCode={46} /* 'delete'-key */\r\n      >\r\n        qwe\r\n        <Controls/>\r\n      </ReactFlow>\r\n    </>\r\n  )\r\n\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\stran\\WebstormProjects\\untitled\\auditorproTest\\src\\components\\Diagrams\\control-panel\\control-panel.jsx",["74","75"],"import React, {useState} from \"react\";\r\nimport './control-panel.css'\r\nimport {\r\n  arrowDownSvg,\r\n  briefcaseSvg,\r\n  circleSvg,\r\n  downloadSvg,\r\n  filterSvg, menuSvg, plusSvg,\r\n  printerSvg,\r\n  shareSvg,\r\n  userCheckSvg\r\n} from './images'\r\nimport clsx from \"clsx\";\r\nimport ChoiceOrdinagram from \"../modals/choice-ordinagram/choice-ordinagram\";\r\nimport ArrowDown from \"./images/arrow-down\";\r\nimport CreateOrdinagram from \"../modals/create-orginagram/create-orginagram\";\r\n\r\nlet organigrams = [\r\n  {\r\n    id: 0,\r\n    order_id: 1,\r\n    name: '',\r\n    type: '',  // top-bottom, bottom-top, left-right, right-left\r\n    connect_line: 'smoothstep',  //  'default', 'straight', 'step','smoothstep'\r\n    base_color: '',\r\n  },\r\n]\r\n\r\nexport const ControlPanel = () => {\r\n  const [openModalChoice, setOpenModalChoice] = useState(false)\r\n  const [openModalCreate, setOpenModalCreate] = useState(false)\r\n\r\n  const onClickOpenModalChoice = () => {\r\n    setOpenModalChoice(open => !open)\r\n  }\r\n\r\n  const onClickOpenModalCreate = () => {\r\n    setOpenModalCreate(open => !open)\r\n  }\r\n\r\n  return (\r\n    <div className=\"controlPanel\">\r\n      <div className={clsx(\"controlPanel__item\", \"mr-10\")}>\r\n        <img src={menuSvg} alt=\"menu\"/>\r\n      </div>\r\n      <div style={{position: 'relative'}}>\r\n        <div className={clsx(\"controlPanel__item\", \"mr-10\")}>\r\n          {organigrams[0].name === '' ? (\r\n            <div onClick={onClickOpenModalCreate} className=\"d-flex align-items-center\">\r\n              <p className=\"controlPanel__text\">Создать новую</p>\r\n              <img className=\"p-10 cup\" src={plusSvg} alt=\"add\"/>\r\n            </div>\r\n          ) : (\r\n            <div onClick={onClickOpenModalChoice} className=\"d-flex align-items-center\">\r\n              <p className=\"controlPanel__text\" style={{color: openModalChoice && '#1D8BC5'}}>12312312</p>\r\n              <ArrowDown className=\"ml-10 cup\" openModalChoice={openModalChoice}/>\r\n            </div>)}\r\n        </div>\r\n        {openModalCreate && <CreateOrdinagram open={openModalCreate} setOpenModalCreate={setOpenModalCreate}/>}\r\n        {openModalChoice && <ChoiceOrdinagram organigrams={organigrams} onClickOpenModal={onClickOpenModalChoice}/>}\r\n      </div>\r\n      <div className=\"controlPanel__item\">\r\n        <img className=\"mr-25\" src={printerSvg} alt=\"printer\"/>\r\n        <img className=\"mr-25\" src={downloadSvg} alt=\"download\"/>\r\n        <img src={shareSvg} alt=\"share\"/>\r\n      </div>\r\n      <div className={clsx(\"controlPanel__item\", \"ml-auto\")}>\r\n        <img className=\"mr-25\" src={userCheckSvg} alt=\"printer\"/>\r\n        <img className=\"mr-25\" src={briefcaseSvg} alt=\"briefcase\"/>\r\n        <img src={filterSvg} alt=\"filter\"/>\r\n      </div>\r\n    </div>\r\n  )\r\n}","C:\\Users\\stran\\WebstormProjects\\untitled\\auditorproTest\\src\\components\\Diagrams\\control-panel\\images\\index.js",[],"C:\\Users\\stran\\WebstormProjects\\untitled\\auditorproTest\\src\\components\\Diagrams\\images\\index.js",[],"C:\\Users\\stran\\WebstormProjects\\untitled\\auditorproTest\\src\\components\\Diagrams\\modals\\data-card\\data-card.jsx",["76"],"import React, {useState} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport './data-card.css'\r\nimport {ava, documentsSvg, kebabMenuSvg, messageCircleSvg} from \"../../images\";\r\nimport {Save, saveType} from \"../save/save\";\r\n\r\n// function rand() {\r\n//   return Math.round(Math.random() * 20) - 10;\r\n// }\r\n//\r\n// function getModalStyle() {\r\n//   const top = 50 + rand();\r\n//   const left = 50 + rand();\r\n//\r\n//   return {\r\n//     top: `${top}%`,\r\n//     left: `${left}%`,\r\n//     transform: `translate(-${top}%, -${left}%)`,\r\n//   };\r\n// }\r\n\r\nexport const DataCard = ({setOpen, open = false, card}) => {\r\n  // const [modalStyle] = React.useState(getModalStyle);\r\n  const [textareaFocus, setTextareaFocus] = useState(false)\r\n  const [textareaOnChange, setTextareaOnChange] = useState({\r\n    value: '',\r\n    height: '',\r\n  })\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOnchangeTextarea = (e) => {\r\n    setTextareaOnChange((item) => ({\r\n      value: e.target.value,\r\n      height: e.target.scrollHeight\r\n    }))\r\n  }\r\n\r\n  const focusTextarea = (e) => {\r\n    setTextareaFocus(true)\r\n    // console.log(e.target.value.match(/\\n/g) !== null && e.target.value.match(/\\n/g).length + 1)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n        open={open}\r\n        onClose={handleClose}\r\n      >\r\n        <div className=\"modal\">\r\n          <div className=\"status\" style={{background: card?.status_color}}/>\r\n          {/*<div onClick={handleClose}>X</div>*/}\r\n          <div className=\"modal__item\">\r\n            <img className=\"modal__menu\" src={kebabMenuSvg} alt=\"menu\"/>\r\n            <div className=\"d-flex mt-15 mb-30\">\r\n              <img src={ava} alt=\"avatar\"/>\r\n              <div className=\"ml-15\">\r\n                <input className=\"modal__input\" defaultValue={card?.full_name}/>\r\n                <input className=\"modal__input\" defaultValue={card?.working_position} placeholder=\"Должность\"/>\r\n              </div>\r\n            </div>\r\n            {\r\n              card?.user_data.map(item => {\r\n                return (\r\n                  <div className=\"d-flex align-items-center mb-5\"\r\n                       style={{\r\n                         // border: '1px solid red',\r\n                         width: 350,\r\n                       }}\r\n                       key={item.id}\r\n                  >\r\n                    <img src={item.icon} alt=\"icon\"/>\r\n                    <p className=\"modal__text\">{item.title}</p>\r\n                    <input type=\"data-user\" placeholder=\"Пусто\" style={{\r\n                      margin: '0 0 0 auto',\r\n                    }}/>\r\n                  </div>\r\n                )\r\n              })\r\n            }\r\n            <div className=\"d-flex align-items-center mb-5\">\r\n              <img src=\"\" alt=\"icon\" style={{border: '1px solid green',}}/>\r\n              <p className=\"modal__text\">Добавить</p>\r\n            </div>\r\n            <h4 className=\"mt-25 mb-15 d-flex align-items-center \">\r\n              <span className=\"d-flex align-items-center\"><img src={messageCircleSvg} alt=\"message\"/></span>\r\n              Характеристики\r\n            </h4>\r\n            <textarea\r\n              onFocus={(e) => focusTextarea(e)}\r\n              // onBlur={(e) => setTextareaFocus(false)}\r\n              onChange={(e) => handleOnchangeTextarea(e)}\r\n              className=\"modal__textarea\"\r\n              placeholder=\"Напишите что-нибудь\"\r\n              style={{\r\n                minHeight: textareaFocus && textareaOnChange.height > 75 ? textareaOnChange.height : 75,\r\n                overflowY: textareaFocus && 'hidden',\r\n                border: textareaFocus && '1px solid #53A9D7',\r\n              }}\r\n              name=\"\" id=\"\" cols=\"10\" rows=\"4\"\r\n            />\r\n            {textareaFocus && <Save type={saveType.textarea} setTextareaFocus={setTextareaFocus} text=\"Готово\"/>}\r\n            <h4 className=\"mt-25 mb-15 d-flex align-items-center \">\r\n              <span className=\"d-flex align-items-center\"><img src={documentsSvg} alt=\"doc\"/></span>\r\n              Документы\r\n            </h4>\r\n            <div className=\"d-flex align-items-center mb-5\">\r\n              <img src=\"\" alt=\"icon\" style={{border: '1px solid green',}}/>\r\n              <p className=\"modal__text\">Добавить</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}","C:\\Users\\stran\\WebstormProjects\\untitled\\auditorproTest\\src\\components\\Diagrams\\modals\\save\\save.jsx",["77"],"import React from \"react\";\r\nimport './save.css';\r\nimport {closeSaveSvg} from \"../../images\";\r\nimport clsx from \"clsx\";\r\n\r\nexport const saveType = {\r\n  textarea: 'textarea',\r\n  card: 'card',\r\n}\r\n\r\nexport const Save = ({\r\n                       type,\r\n                       text,\r\n                       className,\r\n                       setTextareaFocus,\r\n                       setInputFocus,\r\n                     }) => {\r\n\r\n  switch (type) {\r\n    case saveType.textarea :\r\n      return (\r\n        <div className=\"d-flex align-items-center mt-15\">\r\n          <button\r\n            className=\"save-btn save-btn_textarea\"\r\n          >{text}</button>\r\n          <img\r\n            onClick={() => setTextareaFocus(false)}\r\n            className=\"ml-15 cup\"\r\n            src={closeSaveSvg} alt=\"close\"/>\r\n        </div>\r\n      )\r\n    case saveType.card :\r\n      return (\r\n        <div className={clsx(className, \"d-flex align-items-center mt-25\")}>\r\n            <button\r\n              className=\"save-btn save-btn_card\"\r\n            >{text}</button>\r\n            <img\r\n              className=\"ml-10 cup\"\r\n              src={closeSaveSvg} alt=\"close\"/>\r\n        </div>\r\n      )\r\n  }\r\n}","C:\\Users\\stran\\WebstormProjects\\untitled\\auditorproTest\\src\\components\\Diagrams\\ui\\tooltip\\material-ui-styles.js",[],"C:\\Users\\stran\\WebstormProjects\\untitled\\auditorproTest\\src\\components\\Diagrams\\modals\\choice-ordinagram\\choice-ordinagram.jsx",[],"C:\\Users\\stran\\WebstormProjects\\untitled\\auditorproTest\\src\\components\\Diagrams\\control-panel\\images\\arrow-down.jsx",[],"C:\\Users\\stran\\WebstormProjects\\untitled\\auditorproTest\\src\\components\\Diagrams\\modals\\create-orginagram\\create-orginagram.jsx",[],"C:\\Users\\stran\\WebstormProjects\\untitled\\auditorproTest\\src\\components\\Diagrams\\modals\\create-orginagram\\images\\index.js",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":6,"column":10,"nodeType":"84","messageId":"85","endLine":6,"endColumn":18},{"ruleId":"82","severity":1,"message":"86","line":350,"column":16,"nodeType":"84","messageId":"85","endLine":350,"endColumn":27},{"ruleId":"82","severity":1,"message":"87","line":351,"column":30,"nodeType":"84","messageId":"85","endLine":351,"endColumn":40},{"ruleId":"82","severity":1,"message":"88","line":365,"column":5,"nodeType":"84","messageId":"85","endLine":365,"endColumn":9},{"ruleId":"89","severity":1,"message":"90","line":589,"column":1,"nodeType":"91","endLine":794,"endColumn":3},{"ruleId":"82","severity":1,"message":"92","line":590,"column":9,"nodeType":"84","messageId":"85","endLine":590,"endColumn":16},{"ruleId":"82","severity":1,"message":"93","line":601,"column":11,"nodeType":"84","messageId":"85","endLine":601,"endColumn":21},{"ruleId":"94","severity":1,"message":"95","line":762,"column":6,"nodeType":"96","endLine":762,"endColumn":35,"suggestions":"97"},{"ruleId":"82","severity":1,"message":"98","line":4,"column":3,"nodeType":"84","messageId":"85","endLine":4,"endColumn":15},{"ruleId":"82","severity":1,"message":"99","line":6,"column":3,"nodeType":"84","messageId":"85","endLine":6,"endColumn":12},{"ruleId":"82","severity":1,"message":"100","line":2,"column":9,"nodeType":"84","messageId":"85","endLine":2,"endColumn":19},{"ruleId":"101","severity":1,"message":"102","line":19,"column":3,"nodeType":"103","messageId":"104","endLine":43,"endColumn":4},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"no-unused-vars","'valueInp' is assigned a value but never used.","Identifier","unusedVar","'useCallback' is defined but never used.","'updateEdge' is defined but never used.","'user' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'classes' is assigned a value but never used.","'heightElem' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'returnLabel'. Either include it or remove the dependency array. Outer scope values like 'initialElements' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["107"],"'arrowDownSvg' is defined but never used.","'circleSvg' is defined but never used.","'makeStyles' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation",{"desc":"108","fix":"109"},"Update the dependencies array to be: [inputFocus, returnLabel]",{"range":"110","text":"111"},[21475,21504],"[inputFocus, returnLabel]"]