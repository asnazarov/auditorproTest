[{"C:\\Users\\stran\\WebstormProjects\\untitled\\auditorproTest\\src\\index.js":"1","C:\\Users\\stran\\WebstormProjects\\untitled\\auditorproTest\\src\\App.jsx":"2","C:\\Users\\stran\\WebstormProjects\\untitled\\auditorproTest\\src\\components\\CopyPasteText\\CopyPasteText.jsx":"3","C:\\Users\\stran\\WebstormProjects\\untitled\\auditorproTest\\src\\components\\Diagrams\\Main.jsx":"4","C:\\Users\\stran\\WebstormProjects\\untitled\\auditorproTest\\src\\components\\Diagrams\\control-panel\\control-panel.jsx":"5","C:\\Users\\stran\\WebstormProjects\\untitled\\auditorproTest\\src\\components\\Diagrams\\control-panel\\images\\index.js":"6","C:\\Users\\stran\\WebstormProjects\\untitled\\auditorproTest\\src\\components\\Diagrams\\images\\index.js":"7","C:\\Users\\stran\\WebstormProjects\\untitled\\auditorproTest\\src\\components\\Diagrams\\modals\\data-card\\data-card.jsx":"8","C:\\Users\\stran\\WebstormProjects\\untitled\\auditorproTest\\src\\components\\Diagrams\\modals\\save\\save.jsx":"9"},{"size":232,"mtime":1618082501521,"results":"10","hashOfConfig":"11"},{"size":1619,"mtime":1618082508473,"results":"12","hashOfConfig":"11"},{"size":859,"mtime":1617179337684,"results":"13","hashOfConfig":"14"},{"size":20747,"mtime":1618165163624,"results":"15","hashOfConfig":"11"},{"size":1087,"mtime":1617215719948,"results":"16","hashOfConfig":"11"},{"size":465,"mtime":1617214983641,"results":"17","hashOfConfig":"11"},{"size":436,"mtime":1617890291691,"results":"18","hashOfConfig":"11"},{"size":4506,"mtime":1618088119049,"results":"19","hashOfConfig":"11"},{"size":856,"mtime":1617895810755,"results":"20","hashOfConfig":"11"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"mszg4f",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"8bne42",{"filePath":"28","messages":"29","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"23"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"23"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"23"},"C:\\Users\\stran\\WebstormProjects\\untitled\\auditorproTest\\src\\index.js",[],["44","45"],"C:\\Users\\stran\\WebstormProjects\\untitled\\auditorproTest\\src\\App.jsx",[],"C:\\Users\\stran\\WebstormProjects\\untitled\\auditorproTest\\src\\components\\CopyPasteText\\CopyPasteText.jsx",["46"],"C:\\Users\\stran\\WebstormProjects\\untitled\\auditorproTest\\src\\components\\Diagrams\\Main.jsx",["47","48","49","50","51","52"],"// import React, {useEffect, useState} from 'react';\r\n// import ReactFlow, {removeElements, addEdge, Handle} from 'react-flow-renderer';\r\n// import avatarJob from './images/avatar-job.jpg';\r\n// import fileSvg from './images/file.svg';\r\n// import commentSvg from './images/comment.svg';\r\n// import './main.css';\r\n// import {ControlPanel} from \"./control-panel/control-panel\";\r\n// import {DataCard} from \"./modals/data-card/data-card\";\r\n//\r\n//\r\n// let data = [\r\n//   {\r\n//     id: 12321231213,\r\n//     photo: '',\r\n//     full_name: 'Вася',\r\n//     status_color: '#E1E5EB',\r\n//     // working_position: 'Второй помощник капитана',\r\n//     working_position: '',\r\n//     characteristic: '',\r\n//     documents: [],\r\n//     position: {x: 350, y: 50},\r\n//     user_data: [\r\n//       {\r\n//         id: 1,\r\n//         icon: '',\r\n//         title: 'Департамент',\r\n//         description: '',\r\n//       },\r\n//       {\r\n//         id: 2,\r\n//         icon: '',\r\n//         title: 'Дата рождения',\r\n//         description: '',\r\n//       },\r\n//       {\r\n//         id: 3,\r\n//         icon: '',\r\n//         title: 'Телефон',\r\n//         description: '',\r\n//       },\r\n//       {\r\n//         id: 4,\r\n//         icon: '',\r\n//         title: 'Почта',\r\n//         description: '',\r\n//       },\r\n//     ],\r\n//   },\r\n//   {\r\n//     id: 1,\r\n//     photo: '',\r\n//     full_name: 'Петя',\r\n//     status_color: '#E1E5EB',\r\n//     // working_position: 'Второй помощник капитана',\r\n//     working_position: '',\r\n//     characteristic: '',\r\n//     documents: [],\r\n//     position: {x: 128, y: 272},\r\n//     user_data: [\r\n//       {\r\n//         id: 1,\r\n//         icon: '',\r\n//         title: 'Департамент',\r\n//         description: '',\r\n//       },\r\n//       {\r\n//         id: 2,\r\n//         icon: '',\r\n//         title: 'Дата рождения',\r\n//         description: '',\r\n//       },\r\n//       {\r\n//         id: 3,\r\n//         icon: '',\r\n//         title: 'Телефон',\r\n//         description: '',\r\n//       },\r\n//       {\r\n//         id: 4,\r\n//         icon: '',\r\n//         title: 'Почта',\r\n//         description: '',\r\n//       },\r\n//     ],\r\n//   },\r\n//   {\r\n//     id: 2,\r\n//     photo: '',\r\n//     full_name: 'Петя',\r\n//     status_color: '#E1E5EB',\r\n//     // working_position: 'Второй помощник капитана',\r\n//     working_position: '',\r\n//     characteristic: '',\r\n//     documents: [],\r\n//     position: {x: 637, y: 278},\r\n//     user_data: [\r\n//       {\r\n//         id: 1,\r\n//         icon: '',\r\n//         title: 'Департамент',\r\n//         description: '',\r\n//       },\r\n//       {\r\n//         id: 2,\r\n//         icon: '',\r\n//         title: 'Дата рождения',\r\n//         description: '',\r\n//       },\r\n//       {\r\n//         id: 3,\r\n//         icon: '',\r\n//         title: 'Телефон',\r\n//         description: '',\r\n//       },\r\n//       {\r\n//         id: 4,\r\n//         icon: '',\r\n//         title: 'Почта',\r\n//         description: '',\r\n//       },\r\n//     ],\r\n//   },\r\n//\r\n// ]\r\n//\r\n// // const initialElements = [\r\n// //   // {\r\n// //   //   id: '1',\r\n// //   //   type: 'default',\r\n// //   //   data: {label: \"Main card\"},\r\n// //   //   targetPosition: 'left',\r\n// //   //   position: {x: 250, y: 25},\r\n// //   //   // draggable: false,\r\n// //   //   // connectable: false,\r\n// //   //   className: 'rrrrrr',\r\n// //   //   // selectable: false,\r\n// //   // },\r\n// //   {\r\n// //     id: '2',\r\n// //     data: {\r\n// //       label:\r\n// //         <>\r\n// //           <div className=\"status\"/>\r\n// //           <div className=\"card__item\">\r\n// //             <img src={avatarJob} alt=\"avatar\"/>\r\n// //             <div>\r\n// //               <p>Владислав</p>\r\n// //               <p>Константинов</p>\r\n// //               <p>Второй помощник капитана</p>\r\n// //             </div>\r\n// //           </div>\r\n// //           <div style={{display: 'flex'}}>\r\n// //             <img src={commentSvg} alt=\"comment\"/>\r\n// //             <img src={fileSvg} alt=\"file\"/>\r\n// //             <p style={{margin: 0}}>А56</p>\r\n// //           </div>\r\n// //         </>\r\n// //     },\r\n// //     className: \"card\",\r\n// //     position: {x: 550, y: 250},\r\n// //   },\r\n// // ];\r\n//\r\n// export default () => {\r\n//   let connectLine = [\r\n//     // {\r\n//     //   id: \"reactflow__edge-12321231213c-2a\",\r\n//     //   source: \"12321231213\",\r\n//     //   sourceHandle: \"c\",\r\n//     //   target: \"2\",\r\n//     //   targetHandle: \"a\",\r\n//     // },\r\n//     {\r\n//       id: 'e1-1',\r\n//       source: '12321231213',\r\n//       target: '2',\r\n//       type: 'smoothstep',\r\n//     },\r\n//     // {\r\n//     //   id: 'e1-2',\r\n//     //   source: '12321231213',\r\n//     //   target: '1',\r\n//     //   type: 'smoothstep',\r\n//     // },\r\n//   ]\r\n//   const [elements, setElements] = useState([]);\r\n//   const [dataActiveCard, setDataActiveCard] = useState({})\r\n//   const [openModal, setOpenModal] = React.useState(false);\r\n//   const [mouseEnterLeave, setMouseEnterLeave] = useState(false)\r\n//   const [a, setA] = useState(false)\r\n//\r\n//   const handleDoubleClickCard = (card) => {\r\n//     setOpenModal(true);\r\n//     setDataActiveCard(card)\r\n//   };\r\n//\r\n//   const onElementsRemove = (elementsToRemove) =>\r\n//     setElements((els) => removeElements(elementsToRemove, els));\r\n//\r\n//   const onConnect = (params) => {\r\n//     console.log(params)\r\n//     // let newData = [...connectLine, params]\r\n//     // connectLine = newData\r\n//    return setElements((els) => addEdge(params, els));\r\n//   }\r\n//\r\n//   const onNodeDragStop = (event, node) => {\r\n//     console.log(node)\r\n//     // const newData = data?.map((x, index) => {\r\n//     //   if (x.id === Number(node.id)) {\r\n//     //     return {\r\n//     //       ...x,\r\n//     //       position: node?.position\r\n//     //     }\r\n//     //   }\r\n//     //   return {...x}\r\n//     // })\r\n//     // data = newData\r\n//   }\r\n//\r\n//\r\n//   const onNodeMouseEnter = (event, node) => {\r\n//     setMouseEnterLeave(true)\r\n//   }\r\n//\r\n//   const onNodeMouseLeave = (event, node) => {\r\n//     setMouseEnterLeave(false)\r\n//   }\r\n//\r\n//   const onSubmitName = (e) => {\r\n//     e.preventDefault()\r\n//     e.target[0].blur()\r\n//   }\r\n//   const returnLabel = (card, indexCard) => {\r\n//\r\n//     return (\r\n//       <div>\r\n//         <div\r\n//           onDoubleClick={() => handleDoubleClickCard(card)}\r\n//           // onMouseEnter={(e) => setMouseEnterLeave(true)}\r\n//           // onMouseLeave={(e) => setMouseEnterLeave(false)}\r\n//         >\r\n//           <div className=\"status\" style={{background: card.status_color}}/>\r\n//           <div className=\"card__item\">\r\n//             <img src={avatarJob} alt=\"avatar\"/>\r\n//             {(data.length === 1 && card.full_name === '') ?\r\n//               <div>\r\n//                 <form onSubmit={onSubmitName}>\r\n//                   <input placeholder=\"Имя и фамилия\"/>\r\n//                 </form>\r\n//               </div> : <div>\r\n//                 <p>{card.full_name}</p>\r\n//                 <p>{card.working_position}</p>\r\n//               </div>\r\n//             }\r\n//           </div>\r\n//           <div style={{display: 'flex'}}>\r\n//             <img src={commentSvg} alt=\"comment\"/>\r\n//             <img src={fileSvg} alt=\"file\"/>\r\n//             <p style={{margin: 0}}>А56</p>\r\n//           </div>\r\n//         </div>\r\n//         <button className=\"card__add card__add_left\">+</button>\r\n//         <button className=\"card__add card__add_bottom\">+</button>\r\n//         <button className=\"card__add card__add_right\">+</button>\r\n//         <Handle\r\n//           type=\"target\"\r\n//           position=\"top\"\r\n//           id=\"a\"\r\n//           style={{borderRadius: 0, bottom: 0, width: 22, height: 10}}\r\n//           // isValidConnection={(connection) => console.log(connection)}\r\n//           // isValidConnection={(connection) => connection.source === 'some-id'}\r\n//           // onConnect={(params) => console.log('handle onConnect', params)}\r\n//           // onConnect={(params) => onConnect(params)}\r\n//         />\r\n//         {/*<Handle*/}\r\n//         {/*  // type=\"target\"*/}\r\n//         {/*  position=\"right\"*/}\r\n//         {/*  id=\"b\"*/}\r\n//         {/*  style={{top: '50%', borderRadius: 0, right: 0, width: 10, height: 22}}*/}\r\n//         {/*  isValidConnection={(connection) => console.log(connection)}*/}\r\n//         {/*  // isValidConnection={(connection) => connection.source === 'some-id'}*/}\r\n//         {/*  onConnect={(params) => console.log('handle onConnect', params)}*/}\r\n//         {/*/>*/}\r\n//         <Handle\r\n//           type=\"source\"\r\n//           position=\"bottom\"\r\n//           id=\"c\"\r\n//           style={{borderRadius: 0, bottom: 0, width: 22, left: '50%', height: 10}}\r\n//           // isValidConnection={(connection) => console.log(connection)}\r\n//           // isValidConnection={(connection) => connection.source === 'some-id'}\r\n//           // onConnect={(params) => console.log('handle onConnect', params)}\r\n//           // onConnect={(params) => onConnect(params)}\r\n//         />\r\n//         {/*<Handle*/}\r\n//         {/*  // type=\"source\"*/}\r\n//         {/*  position=\"left\"*/}\r\n//         {/*  id=\"d\"*/}\r\n//         {/*  style={{borderRadius: 0, left: 0, width: 10, height: 22}}*/}\r\n//         {/*  isValidConnection={(connection) => console.log(connection)}*/}\r\n//         {/*  // isValidConnection={(connection) => connection.source === 'some-id'}*/}\r\n//         {/*  onConnect={(params) => console.log('handle onConnect', params)}*/}\r\n//         {/*/>*/}\r\n//       </div>\r\n//     )\r\n//   }\r\n//\r\n//   useEffect(() => {\r\n//     let items = data.map((card, index) => {\r\n//       return (\r\n//         {\r\n//           id: card.id,\r\n//           position: card.position,\r\n//           data: {label: returnLabel(card, index)},\r\n//           className: \"card\",\r\n//           type: 'input',\r\n//         }\r\n//       )\r\n//     })\r\n//     items = items.concat(connectLine)\r\n//     console.log('items', items)\r\n//     setElements(items)\r\n//   }, [])\r\n//\r\n// console.log(elements)\r\n//   return (\r\n//     <>\r\n//       {openModal && <DataCard setOpen={setOpenModal} open={openModal} card={dataActiveCard}/>}\r\n//       <ControlPanel/>\r\n//       <ReactFlow\r\n//         elements={elements}\r\n//         onElementsRemove={onElementsRemove}\r\n//         onNodeDragStop={onNodeDragStop}\r\n//         connectionLineType=\"smoothstep\"\r\n//         // onNodeMouseEnter={onNodeMouseEnter}\r\n//         // onNodeMouseLeave={onNodeMouseLeave}\r\n//         onConnect={onConnect}\r\n//         className=\"cardssss\"\r\n//         style={{\r\n//           height: \"80vh\",\r\n//           // border: \"1px solid red\"\r\n//         }}\r\n//         deleteKeyCode={46} /* 'delete'-key */\r\n//       >\r\n//         <div>123</div>\r\n//       </ReactFlow>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n\r\nimport React, {useCallback, useEffect, useState} from 'react';\r\nimport ReactFlow, {Controls, updateEdge, addEdge, Handle} from 'react-flow-renderer';\r\nimport './main.css';\r\nimport {ControlPanel} from \"./control-panel/control-panel\";\r\nimport {DataCard} from \"./modals/data-card/data-card\";\r\nimport {avatarJob} from \"./images\";\r\n\r\nlet connectLine = [\r\n  {id: 'e1-2', source: '1', target: '2', label: 'заметка', type: 'smoothstep',},\r\n]\r\nconst getNodeId = () => `randomnode_${+new Date()}`;\r\n\r\nlet organigramms = [\r\n  {\r\n    id: 0,\r\n    order_id: 1,\r\n    name: '',\r\n    type: 0,\r\n    connect_line: 0,\r\n    base_color: '',\r\n    items: [\r\n      {\r\n        id: '',\r\n        full_name: '',\r\n        data: { label: 'Node A' },\r\n        status: {\r\n          status_color: '',\r\n          status_name: [''],\r\n          closing_date: '',\r\n        },\r\n        position: {x: 350, y: 50},\r\n        call_sign: '',\r\n        working_position: '',\r\n        characteristic: '',\r\n        documents: [],\r\n        user_data: [\r\n          {\r\n            id: 1,\r\n            icon: '',\r\n            order_id: 1,\r\n            title: 'Департамент',\r\n            description: '',\r\n          },\r\n          {\r\n            id: 2,\r\n            icon: '',\r\n            order_id: 2,\r\n            title: 'Дата рождения',\r\n            description: '',\r\n          },\r\n          {\r\n            id: 3,\r\n            icon: '',\r\n            order_id: 3,\r\n            title: 'Телефон',\r\n            description: '',\r\n          },\r\n          {\r\n            id: 4,\r\n            icon: '',\r\n            order_id: 4,\r\n            title: 'Почта',\r\n            description: '',\r\n          },\r\n        ],\r\n      }\r\n    ]\r\n  }\r\n]\r\n\r\nlet initialElements = [\r\n  {\r\n    id: '1',\r\n    full_name: 'Петя',\r\n    data: { label: 'Node A' },\r\n    status_color: '#E1E5EB',\r\n    position: {x: 350, y: 50},\r\n    user_data: [\r\n      {\r\n        id: 1,\r\n        icon: '',\r\n        title: 'Департамент',\r\n        description: '',\r\n      },\r\n      {\r\n        id: 2,\r\n        icon: '',\r\n        title: 'Дата рождения',\r\n        description: '',\r\n      },\r\n      {\r\n        id: 3,\r\n        icon: '',\r\n        title: 'Телефон',\r\n        description: '',\r\n      },\r\n      {\r\n        id: 4,\r\n        icon: '',\r\n        title: 'Почта',\r\n        description: '',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: '2',\r\n    full_name: 'Миша',\r\n    data: { label: 'Node A' },\r\n    status_color: '#29c31a',\r\n    position: {x: 128, y: 278},\r\n    user_data: [\r\n      {\r\n        id: 1,\r\n        icon: '',\r\n        title: 'Департамент',\r\n        description: '',\r\n      },\r\n      {\r\n        id: 2,\r\n        icon: '',\r\n        title: 'Дата рождения',\r\n        description: '',\r\n      },\r\n      {\r\n        id: 3,\r\n        icon: '',\r\n        title: 'Телефон',\r\n        description: '',\r\n      },\r\n      {\r\n        id: 4,\r\n        icon: '',\r\n        title: 'Почта',\r\n        description: '',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: '3',\r\n    full_name: 'Вася',\r\n    data: { label: 'Node A' },\r\n    status_color: '#07b89d',\r\n    position: {x: 637, y: 278},\r\n    user_data: [\r\n      {\r\n        id: 1,\r\n        icon: '',\r\n        title: 'Департамент',\r\n        description: '',\r\n      },\r\n      {\r\n        id: 2,\r\n        icon: '',\r\n        title: 'Дата рождения',\r\n        description: '',\r\n      },\r\n      {\r\n        id: 3,\r\n        icon: '',\r\n        title: 'Телефон',\r\n        description: '',\r\n      },\r\n      {\r\n        id: 4,\r\n        icon: '',\r\n        title: 'Почта',\r\n        description: '',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: '4',\r\n    full_name: 'Жора',\r\n    data: { label: 'Node A' },\r\n    status_color: '#07b89d',\r\n    position: {x: 637, y: 578},\r\n    user_data: [\r\n      {\r\n        id: 1,\r\n        icon: '',\r\n        title: 'Департамент',\r\n        description: '',\r\n      },\r\n      {\r\n        id: 2,\r\n        icon: '',\r\n        title: 'Дата рождения',\r\n        description: '',\r\n      },\r\n      {\r\n        id: 3,\r\n        icon: '',\r\n        title: 'Телефон',\r\n        description: '',\r\n      },\r\n      {\r\n        id: 4,\r\n        icon: '',\r\n        title: 'Почта',\r\n        description: '',\r\n      },\r\n    ],\r\n  },\r\n];\r\nconst onLoad = (reactFlowInstance) => reactFlowInstance.fitView();\r\n\r\nexport default () => {\r\n\r\n  // const [elements, setElements] = useState(initialElements.concat(connectLine));\r\n  const [elements, setElements] = useState([]);\r\n  const [dataActiveCard, setDataActiveCard] = useState({})\r\n  const [openModal, setOpenModal] = React.useState(false);\r\n  // const onEdgeUpdate = (oldEdge, newConnection) =>\r\n  //   setElements((els) => updateEdge(oldEdge, newConnection, els));\r\n\r\n  const onAddBottom = (event, card) => {\r\n    const heightElem = event.nativeEvent.path[1].clientHeight\r\n    // console.log(event)\r\n    console.log(card)\r\n    const newNode = {\r\n      id: getNodeId(),\r\n      data: { label: returnLabel() },\r\n      position: {\r\n        x: card.position.x,\r\n        y: card.position.y + 250,\r\n      },\r\n      type: 'input',\r\n      className: \"card\",\r\n    };\r\n    const newInitialElement = {\r\n      ...newNode,\r\n      user_data: [\r\n        {\r\n          id: 1,\r\n          icon: '',\r\n          title: 'Департамент',\r\n          description: '',\r\n        },\r\n        {\r\n          id: 2,\r\n          icon: '',\r\n          title: 'Дата рождения',\r\n          description: '',\r\n        },\r\n        {\r\n          id: 3,\r\n          icon: '',\r\n          title: 'Телефон',\r\n          description: '',\r\n        },\r\n        {\r\n          id: 4,\r\n          icon: '',\r\n          title: 'Почта',\r\n          description: '',\r\n        },\r\n      ],\r\n      status_color: \"#07b89d\",\r\n      full_name: 'Без имени',\r\n    }\r\n    initialElements = [...initialElements, newInitialElement]\r\n\r\n    setElements((els) => els.concat(newNode));\r\n  };\r\nconsole.log(initialElements)\r\n  const handleDoubleClickCard = (card) => {\r\n    setOpenModal(true);\r\n    setDataActiveCard(card)\r\n  };\r\n\r\n  const onConnect = (params) => {\r\n    params = {...params, type: 'smoothstep',}\r\n    setElements((els) => addEdge(params, els))\r\n  };\r\n\r\n  const returnLabel = (card, indexCard) => {\r\n\r\n    return (\r\n      <>\r\n        <div\r\n          onDoubleClick={() => handleDoubleClickCard(card, indexCard)}\r\n          // onMouseEnter={(e) => setMouseEnterLeave(true)}\r\n          // onMouseLeave={(e) => setMouseEnterLeave(false)}\r\n          key={indexCard}\r\n        >\r\n          <div className=\"status\" style={{background: card?.status_color}}/>\r\n          <div className=\"card__item\">\r\n            <img src={avatarJob} alt=\"avatar\"/>\r\n            {/*{(data.length === 1 && card.full_name === '') ?*/}\r\n            <div>\r\n              {/*<form onSubmit={onSubmitName}>*/}\r\n              <form>\r\n                <input placeholder=\"Имя и фамилия\"/>\r\n              </form>\r\n            </div>\r\n            : <div>\r\n            <p>{card?.full_name}</p>\r\n            {/*<p>{card.working_position}</p>*/}\r\n          </div>\r\n            {/*}*/}\r\n          </div>\r\n          <div style={{display: 'flex'}}>\r\n            {/*<img src={commentSvg} alt=\"comment\"/>*/}\r\n            {/*<img src={fileSvg} alt=\"file\"/>*/}\r\n            <p style={{margin: 0}}>А56</p>\r\n          </div>\r\n        </div>\r\n        <button className=\"card__add card__add_left\">+</button>\r\n        <button className=\"card__add card__add_bottom\" onClick={(event) =>onAddBottom(event, card)}>+</button>\r\n        <button className=\"card__add card__add_right\">+</button>\r\n        <Handle\r\n          type=\"target\"\r\n          position=\"top\"\r\n          id=\"a\"\r\n          style={{borderRadius: 0, bottom: 0, width: 22, height: 10}}\r\n          // isValidConnection={(connection) => console.log(connection)}\r\n          // isValidConnection={(connection) => connection.source === 'some-id'}\r\n          // onConnect={(params) => console.log('handle onConnect', params)}\r\n          // onConnect={(params) => onConnect(params)}\r\n        />\r\n        <Handle\r\n          type=\"source\"\r\n          position=\"bottom\"\r\n          id=\"c\"\r\n          style={{borderRadius: 0, bottom: 0, width: 22, left: '50%', height: 10}}\r\n          // isValidConnection={(connection) => console.log(connection)}\r\n          // isValidConnection={(connection) => connection.source === 'some-id'}\r\n          // onConnect={(params) => console.log('handle onConnect', params)}\r\n          // onConnect={(params) => onConnect(params)}\r\n        />\r\n      </>\r\n    )\r\n  }\r\n\r\n  useEffect(() => {\r\n    let items = initialElements.map((card, index) => {\r\n      return ({\r\n        id: card.id,\r\n        position: card.position,\r\n        data: {label: returnLabel(card, index)},\r\n        type: 'input',\r\n        className: \"card\",\r\n      })\r\n    })\r\n\r\n    items = items.concat(connectLine)\r\n//     console.log('items', items)\r\n    setElements(items)\r\n  }, [initialElements])\r\n\r\n  return (\r\n    <>\r\n      {/*{openModal && <DataCard setOpen={setOpenModal} open={openModal} card={dataActiveCard}/>}*/}\r\n      {openModal && <DataCard setOpen={setOpenModal} open={openModal} card={dataActiveCard}/>}\r\n      <ControlPanel/>\r\n      <ReactFlow\r\n        id=\"flow\"\r\n        elements={elements}\r\n        onLoad={onLoad}\r\n        snapToGrid\r\n        snapGrid={[10,10]}\r\n        defaultZoom={0.8}\r\n        minZoom={0.3}\r\n        maxZoom={2}\r\n        // onEdgeUpdate={onEdgeUpdate}\r\n        onConnect={onConnect}\r\n        connectionLineType=\"smoothstep\"\r\n        style={{\r\n          height: \"80vh\",\r\n          // border: \"1px solid red\"\r\n        }}\r\n        deleteKeyCode={46} /* 'delete'-key */\r\n      >\r\n        qwe\r\n        <Controls/>\r\n      </ReactFlow>\r\n    </>\r\n  )\r\n\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\stran\\WebstormProjects\\untitled\\auditorproTest\\src\\components\\Diagrams\\control-panel\\control-panel.jsx",[],"C:\\Users\\stran\\WebstormProjects\\untitled\\auditorproTest\\src\\components\\Diagrams\\control-panel\\images\\index.js",[],["53","54"],"C:\\Users\\stran\\WebstormProjects\\untitled\\auditorproTest\\src\\components\\Diagrams\\images\\index.js",[],"C:\\Users\\stran\\WebstormProjects\\untitled\\auditorproTest\\src\\components\\Diagrams\\modals\\data-card\\data-card.jsx",["55"],"import React, {useState} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport './data-card.css'\r\nimport {ava, documents, kebabMenu, messageCircle} from \"../../images\";\r\nimport {Save, saveType} from \"../save/save\";\r\n\r\n// function rand() {\r\n//   return Math.round(Math.random() * 20) - 10;\r\n// }\r\n//\r\n// function getModalStyle() {\r\n//   const top = 50 + rand();\r\n//   const left = 50 + rand();\r\n//\r\n//   return {\r\n//     top: `${top}%`,\r\n//     left: `${left}%`,\r\n//     transform: `translate(-${top}%, -${left}%)`,\r\n//   };\r\n// }\r\n\r\nexport const DataCard = ({setOpen, open = false, card}) => {\r\n  // const [modalStyle] = React.useState(getModalStyle);\r\n  const [textareaFocus, setTextareaFocus] = useState(false)\r\n  const [textareaOnChange, setTextareaOnChange] = useState({\r\n    value: '',\r\n    height: '',\r\n  })\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOnchangeTextarea = (e) => {\r\n    setTextareaOnChange((item) => ({\r\n      value: e.target.value,\r\n      height: e.target.scrollHeight\r\n    }))\r\n  }\r\n\r\n  const focusTextarea = (e) => {\r\n    setTextareaFocus(true)\r\n    // console.log(e.target.value.match(/\\n/g) !== null && e.target.value.match(/\\n/g).length + 1)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n        open={open}\r\n        onClose={handleClose}\r\n      >\r\n        <div className=\"modal\">\r\n          <div className=\"status\" style={{background: card?.status_color}}/>\r\n          {/*<div onClick={handleClose}>X</div>*/}\r\n          <div className=\"modal__item\">\r\n            <img className=\"modal__menu\" src={kebabMenu} alt=\"menu\"/>\r\n            <div className=\"d-flex mt-15 mb-30\">\r\n              <img src={ava} alt=\"avatar\"/>\r\n              <div className=\"ml-15\">\r\n                <h2 className=\"modal__title\">{card?.full_name}</h2>\r\n                <input defaultValue={card?.working_position} placeholder=\"Должность\"/>\r\n              </div>\r\n            </div>\r\n            {\r\n              card?.user_data.map(item => {\r\n                return (\r\n                  <div className=\"d-flex align-items-center mb-5\"\r\n                       style={{\r\n                         // border: '1px solid red',\r\n                         width: 350,\r\n                       }}\r\n                       key={item.id}\r\n                  >\r\n                    <img src={item.icon} alt=\"icon\"/>\r\n                    <p className=\"modal__text\">{item.title}</p>\r\n                    <input type=\"data-user\" placeholder=\"Пусто\" style={{\r\n                      margin: '0 0 0 auto',\r\n                    }}/>\r\n                  </div>\r\n                )\r\n              })\r\n            }\r\n            <div className=\"d-flex align-items-center mb-5\">\r\n              <img src=\"\" alt=\"icon\" style={{border: '1px solid green',}}/>\r\n              <p className=\"modal__text\">Добавить</p>\r\n            </div>\r\n            <h4 className=\"mt-25 mb-15 d-flex align-items-center \">\r\n              <span className=\"d-flex align-items-center\"><img src={messageCircle} alt=\"message\"/></span>\r\n              Характеристики\r\n            </h4>\r\n            <textarea\r\n              onFocus={(e) => focusTextarea(e)}\r\n              // onBlur={(e) => setTextareaFocus(false)}\r\n              onChange={(e) => handleOnchangeTextarea(e)}\r\n              className=\"modal__textarea\"\r\n              placeholder=\"Напишите что-нибудь\"\r\n              style={{\r\n                minHeight: textareaFocus && textareaOnChange.height > 75 ? textareaOnChange.height : 75,\r\n                overflowY: textareaFocus && 'hidden',\r\n                border: textareaFocus && '1px solid #53A9D7',\r\n              }}\r\n              name=\"\" id=\"\" cols=\"10\" rows=\"4\"\r\n            />\r\n            {textareaFocus && <Save type={saveType.textarea} setTextareaFocus={setTextareaFocus}/>}\r\n            <h4 className=\"mt-25 mb-15 d-flex align-items-center \">\r\n              <span className=\"d-flex align-items-center\"><img src={documents} alt=\"doc\"/></span>\r\n              Документы\r\n            </h4>\r\n            <div className=\"d-flex align-items-center mb-5\">\r\n              <img src=\"\" alt=\"icon\" style={{border: '1px solid green',}}/>\r\n              <p className=\"modal__text\">Добавить</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}","C:\\Users\\stran\\WebstormProjects\\untitled\\auditorproTest\\src\\components\\Diagrams\\modals\\save\\save.jsx",["56"],"import React from \"react\";\r\nimport './save.css';\r\nimport {closeSave} from \"../../images\";\r\n\r\nexport const saveType = {\r\n  textarea: 'textarea',\r\n  card: 'card',\r\n}\r\n\r\nexport const Save = ({type, setTextareaFocus}) => {\r\n\r\n  switch (type) {\r\n    case saveType.textarea :\r\n      return (\r\n        <div className=\"d-flex align-items-center mt-15\">\r\n            <button\r\n              onBlur={() => setTextareaFocus(false)}\r\n              style={{\r\n              padding: \"12px 20px\",\r\n              background: '#53A9D7',\r\n              borderRadius: 8,\r\n              outline: 'none',\r\n              border: 'none',\r\n              cursor: 'pointer',\r\n              color: 'white'\r\n            }} >Сохранить</button>\r\n            <img className=\"ml-15 cup\" src={closeSave} alt=\"close\"/>\r\n        </div>\r\n      )\r\n  }\r\n}",{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":6,"column":10,"nodeType":"63","messageId":"64","endLine":6,"endColumn":18},{"ruleId":"61","severity":1,"message":"65","line":352,"column":16,"nodeType":"63","messageId":"64","endLine":352,"endColumn":27},{"ruleId":"61","severity":1,"message":"66","line":353,"column":30,"nodeType":"63","messageId":"64","endLine":353,"endColumn":40},{"ruleId":"61","severity":1,"message":"67","line":364,"column":5,"nodeType":"63","messageId":"64","endLine":364,"endColumn":17},{"ruleId":"68","severity":1,"message":"69","line":558,"column":1,"nodeType":"70","endLine":731,"endColumn":3},{"ruleId":"61","severity":1,"message":"71","line":568,"column":11,"nodeType":"63","messageId":"64","endLine":568,"endColumn":21},{"ruleId":"72","severity":1,"message":"73","line":700,"column":6,"nodeType":"74","endLine":700,"endColumn":23,"suggestions":"75"},{"ruleId":"57","replacedBy":"76"},{"ruleId":"59","replacedBy":"77"},{"ruleId":"61","severity":1,"message":"78","line":2,"column":9,"nodeType":"63","messageId":"64","endLine":2,"endColumn":19},{"ruleId":"79","severity":1,"message":"80","line":12,"column":3,"nodeType":"81","messageId":"82","endLine":28,"endColumn":4},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'valueInp' is assigned a value but never used.","Identifier","unusedVar","'useCallback' is defined but never used.","'updateEdge' is defined but never used.","'organigramms' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'heightElem' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'returnLabel'. Either include it or remove the dependency array. Outer scope values like 'initialElements' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["85"],["83"],["84"],"'makeStyles' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation",{"desc":"86","fix":"87"},"Update the dependencies array to be: [returnLabel]",{"range":"88","text":"89"},[19429,19446],"[returnLabel]"]